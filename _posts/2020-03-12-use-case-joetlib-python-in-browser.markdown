---
layout: post
title:  "Use case: RustPython in the web can be one of itâ€™s best use cases"
date:   2020-03-12 11:34:01 -0400
categories: ["featured", "usecase"]
---

Use case posts are curated from gitter chats and from github issues. You can share your use case via a Pull request or by creating an issue on [rustpython.github.io](https://github.com/RustPython/rustpython.github.io) with the keyword [use-case] somewhere in the title.

---
Submitted by: [Joetib](https://github.com/Joetib). See discussion in this [github issue](https://github.com/RustPython/RustPython/issues/1760).

## RustPython in the web can be one of it's best use cases

## Summary
RustPython in the web can be one of it's best use cases.

The python community have been pushing to have python run in the browser. Many such implementations have been such as brython, skulpt, Batavia etc. Likened with batavia's approach to run python bytecode in the browser, I have been wondering if rustpytgon can ship only it's virtual machine to do similar task.

## Detailed Explanation
Rustpython's wasm module currently is about 4.5mb. This size is too big to be inculcated in most projects.
However I believe if we could remove the parser, lexer and other compiler related stuff and compile only the virtual machine, the size will drastically reduce.
This approach will also require that apps get compiled on their maybe machines before the bytecode is shipped.

## Drawbacks, Rationale, and Alternative Rationale:
It will take a long time for RustPython to get to compete with cpython natively (where cpython works well already) but the web is one place where competition is less.  
If this works, we can have web apps fully written in python (little to no javascript) and we will be able to run already existing software on the web.
This can also lead to the revolution of building front end libraries like implementing python alternatives to react, angular, Vue etc.  

Currently, the beeware team have been working hard to have the Toga(beewae's gui library) working in browsers but are limited by the size of Batavia.
I am certain everyone loved Anvil.works for their idea of creating web apps completely in python.

## Possible Drawback:
Since apps will need to be compiled before shipped and most people use cpython, rustpython's vm must be able to run cpython generated bytecode
This may not even be an issue but I raise this because I'm unaware of the bytecode implementation.
